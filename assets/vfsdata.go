// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 6, 18, 11, 39, 2, 0, time.UTC),
		},
		"/.goreleaser.yml": &vfsgen۰CompressedFileInfo{
			name:             ".goreleaser.yml",
			modTime:          time.Date(2020, 6, 17, 8, 21, 28, 0, time.UTC),
			uncompressedSize: 7628,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x59\x5b\x6f\xdb\xc6\xf2\x7f\xd7\xa7\x18\x48\x0f\x4e\x0d\x93\x4a\xff\x2d\x82\x82\x68\xda\xbf\x63\xbb\x49\xd0\xc4\x36\x12\xa7\x45\x81\x83\x23\x2d\xc9\x11\xb5\xd5\x72\x97\xdd\x5d\x4a\x96\x7d\xfc\xdd\x0f\x66\x2f\x24\x65\x29\xf5\x4b\x7d\xfc\x10\x88\x7b\x99\xfb\xfc\x66\x66\x33\xf9\x87\xff\x46\x8d\x56\x7f\x62\x61\x67\x92\xd5\x98\x41\xde\x72\x51\x5a\xa5\xc4\x68\x34\xfa\xc7\x59\xe5\xb8\x50\x1a\xb3\x11\xc0\x52\xa9\x95\xa1\x1f\x00\x09\x54\x0a\x6a\x55\x42\xa9\x36\x52\x28\x56\xf6\xab\x15\x4a\xd4\xcc\x22\xa4\xd3\x34\x4d\x9f\x45\x22\x52\xd7\x64\xa3\x04\x50\xae\x49\x9e\x04\xce\xde\x5e\xcd\x2e\x2e\x4f\xdf\x7c\xb8\x38\x7f\xfd\x72\x34\x02\xc8\xb9\x64\x7a\xbb\x63\x1a\x80\x4a\xa9\x4e\x7e\xc1\x65\x7b\x1b\x7e\x97\x4c\x6f\xb8\x0c\x1f\x1b\x2e\x4b\xb5\x31\xee\x38\xd3\xc5\x32\x5e\xf8\xee\x87\x57\xe1\x17\xab\xcb\x57\xdf\xc7\xdf\xba\xee\x7f\xbd\xfa\xfe\x39\xd4\x9d\x40\x5a\x29\x8d\x02\x99\x41\x9d\x6e\x6b\x31\x22\xb1\xf8\x1a\x9d\x2e\x89\x63\x3f\x81\xf7\xe7\xa0\x16\x60\x97\xdc\x40\xd8\x4e\xc3\xce\x39\x2e\x58\x2b\xac\x01\xab\x60\x5e\xfa\x8f\x79\xd8\xe4\xe5\xc0\x44\x49\xb8\x38\x0a\x17\xdf\x38\x3b\x83\xc6\x05\x6a\x94\x05\xc2\x66\xc9\x8b\xa5\x3f\x0f\x5c\x1a\xcb\x64\x81\x06\xcc\x52\xb5\xa2\x84\x1c\x23\x63\xda\x3c\x24\x49\xf4\x9b\xfb\x48\x20\x88\x12\xb9\x9d\xfa\xb3\x40\x21\x0d\x16\xeb\x46\x30\xbb\xa7\x43\xb8\x0c\x09\xf0\x05\x2c\x94\xae\x99\x05\x6e\x60\x6e\x99\x4e\xab\xbb\xf9\x89\xff\x75\xeb\x7e\x55\x77\x73\x50\x1a\xe6\x77\xbc\x99\xc7\x7b\xe4\xa8\xf9\xfd\x3d\xa4\xd7\x3e\x81\x2e\x89\xd9\xc3\xc3\x8c\x96\x7e\x43\x6d\xb8\x92\xf1\xf3\xca\xc4\x5f\x24\x19\x3c\x3c\xdc\xdf\x13\xd3\xf4\x54\xd7\xf0\xf0\xb0\xf6\x1b\xb5\x5f\x47\x59\xf6\x07\x3e\xf2\xa6\xbb\x1a\x7e\x77\x47\xe6\x5f\x91\xdf\x87\xeb\xbe\x98\x6f\xdc\xfa\xff\x5e\x42\x72\xc2\x2c\x3a\x21\x83\xf1\xbe\xc9\x92\x83\x12\x8c\xa3\x37\x3f\x61\x23\x58\x81\x35\x4a\x6b\x48\x51\x78\x7b\x75\xf5\x19\x98\x2c\xe1\xed\xd5\xe9\xa7\xb3\x77\x3e\x44\xba\x90\x71\x0c\xa3\xb3\x7f\xc5\xed\x30\xaa\xd6\x4c\xf0\xd2\xdd\x37\xe0\x08\xd1\x7d\x13\x0f\xff\xc6\x44\x8b\x14\x69\xe8\xe8\x69\x34\x0d\x16\x96\x48\xea\x81\x08\x8f\xe2\x88\x6c\x8e\x75\x63\xb7\x7e\x7d\x78\xd2\xbb\x00\x02\x26\x64\x43\x6c\x00\x0f\x1a\xd9\x00\x3b\x20\xc2\x45\x36\xc0\x0d\xfa\xfb\xee\x87\x57\x19\xf0\x88\x19\xe0\x31\x23\x0b\xd0\x11\x84\xf9\x8c\x96\x72\xd2\xea\x16\x4f\xc8\x2f\x5b\xd5\xc2\x86\x49\x0b\x4c\x08\x58\x70\x81\xe6\xb1\x95\xac\x22\x83\x70\x09\x0c\x0c\x97\x95\x40\x28\xb9\xc6\xc2\x2a\xbd\x8d\x1a\xbe\x5f\x80\xe9\xe9\x3a\x8b\x13\x5d\xbc\xb5\x9a\x15\x76\x87\xda\x51\x0f\x2b\xb3\x0f\xa4\xd2\xcc\x61\x58\xea\x93\xe9\xe8\x24\x50\xa4\xeb\x15\x5a\x60\xb0\x50\xa2\x44\xfd\xb5\x7b\x47\xfb\x22\x2c\x98\x30\x78\x32\xd0\x87\xdc\x14\x44\xc1\x12\x0c\x36\x8c\x4a\x85\xe8\xa4\xff\x43\xb5\x50\x30\x09\x4c\x18\xe5\x88\x70\x47\x87\x41\xd1\x1a\xab\xea\x28\x81\xc3\x88\x17\x21\x3e\xb9\xac\xc8\x9f\xa6\x6d\x1a\xa5\x2d\x96\xdf\x1c\x70\xb6\x13\xc4\xaf\x6f\x34\x6b\x66\x5c\xce\x3a\xcb\x65\x7e\xf7\x31\x0e\xf9\xec\x4c\x29\xc0\x78\x09\xaa\xb1\x5c\x49\xaf\xc0\xd7\xd0\xe6\xc4\x63\x8d\xb3\x79\xcc\xe8\x81\x4d\xf6\xd3\xfd\x04\xa4\x8a\xde\xf0\xa4\x0b\x8d\x8c\x2c\x43\x24\xc8\x55\xee\x20\x0f\x9b\x04\xb9\x18\x4a\xed\x04\xda\x86\xea\x2e\x96\x21\x04\x7a\x1b\x0e\xd4\x8e\x92\xfa\x2d\x2f\x40\x06\x7e\x31\xea\x7b\xc6\x24\x05\x55\x6b\xb0\x24\x53\x17\x4b\x26\x2b\xdc\x89\x13\x7f\xcf\xa7\x31\x65\x17\x5f\xf0\xc2\xe7\x63\x64\xf9\x51\x19\x0b\x85\xaa\x6b\x25\x89\x10\x14\xcc\x20\xf1\xb7\x9d\x7a\xc0\x0c\xdc\xf1\x06\x94\x84\xdf\x7d\xa2\xfc\x7d\x4a\x4e\x3c\xd3\x99\x5a\xa3\xd6\xbc\xc4\x0e\xf9\x5d\x93\xa1\x1e\xe5\xdb\x64\xa8\xde\x1d\x6f\x3a\x5f\x96\x25\x27\xbf\xb1\x10\x7f\xd3\x08\x69\xd3\x4a\xa8\xdc\xf4\x19\x47\x82\x96\x4e\xff\x81\xe2\x7b\x05\x94\x9c\xc0\xe4\x36\xc4\x72\xcd\x6c\xb1\xa4\xe0\x9b\x7f\x78\x7f\x76\x71\x79\x76\x71\x4c\x11\xe0\x7e\x7f\xa6\xdf\xe1\xf6\xfc\xd3\xc5\xe9\xf9\xc7\x8b\xe3\x10\x17\x67\xef\x4e\x2f\xdf\x5e\x7c\xb8\x7a\x7b\x3c\x87\x17\x64\xa7\x84\x4b\x83\xd2\x70\xc2\xac\x18\xba\x8e\xc1\x40\xe3\x40\x34\xb5\xb7\xb6\x5f\xf4\x74\x67\xf7\xf7\xe9\x95\x79\x78\x48\xeb\xb2\xdf\xea\x98\xec\xac\x96\xaa\x30\xd3\xe3\xc1\x37\x1a\x5e\xc9\xe9\x71\xda\xc8\xaa\x5f\x8d\x26\x32\xd3\xe3\xe3\xe9\xf1\x73\x34\x34\xc5\x12\x8b\x95\x69\x6b\x52\xf0\x51\xa1\x39\x8a\x7b\x86\x74\x3d\x7a\x0e\xee\x46\xb2\xc6\x2c\x95\x3d\xc0\xdd\x95\xb9\x1b\x56\x51\x79\x93\x78\x6b\xc7\xcf\xa3\x3d\x25\x98\x50\x15\x09\x60\x94\xb6\x19\x30\x53\x8c\x80\xa2\xca\xa2\x0e\x6e\xc7\xdb\x42\xb4\x25\xc6\xe6\xf3\xe8\xdf\xe4\xbc\xec\xa8\xfb\xb4\x68\x6c\xf6\x2c\xf6\x99\x34\x6d\x2e\xb8\x59\x3a\x51\x28\x22\x46\x13\x1f\x1b\x5f\x24\xff\xab\x0d\xfd\x99\x72\xd5\x4a\x43\x77\x36\x85\x2f\x04\x20\x04\x11\xbc\x44\x69\x09\x23\x18\xa5\x9e\xbf\xed\xe7\x94\xb1\xc7\xbd\x24\x54\x8f\xf1\x68\x12\x69\xbf\x3f\x37\xbe\x7d\xa5\xe4\xb3\x7c\xc1\x0a\xbb\x9b\x9d\x81\x51\x38\xcf\x4b\x2f\x9b\x6f\xa5\x16\x4a\xf5\x1f\x39\xd3\x3d\xd9\x6b\x7f\x0b\xba\xa8\x82\x17\xe5\xa0\x1b\x76\xb8\xff\x8d\x3f\xdc\x05\xa5\xab\x9b\xfb\x24\x28\x55\x98\x6d\x35\xfe\x0d\x8d\xee\xcc\x63\x22\xbf\x2b\xbd\x22\xa4\xe8\x6a\x0e\xd5\x70\xdf\x4d\x5b\x05\x78\x8b\x45\x6b\x3d\xe6\x12\x88\x32\x59\xfa\x8b\x25\xd7\x3e\x28\x4b\xae\xa9\xc5\xf2\x86\xb9\x66\xd6\xb7\x5a\x1d\xf9\x33\x7f\x29\xb4\x07\x81\x5c\xa0\x51\xd4\x65\x06\xff\xf1\xbf\x01\x2a\x6e\x97\x6d\x1e\x1d\x10\x6a\x08\xfc\x2b\x6e\x27\x49\x6b\x50\x43\x85\x4c\xe7\xea\x76\xa3\xf4\xca\x0c\x37\x35\x36\xea\x50\x2f\x38\x1e\x1e\xb2\xac\xf2\x67\xfa\x6e\x75\x67\xdf\xc5\xcf\xd8\xf7\x8c\x5e\xa1\x43\x54\x04\xcb\x51\x3c\x79\xec\x13\x24\x8b\xc3\x87\x7a\xe3\x5c\xc8\x35\xd7\x4a\x52\x73\x07\x6b\xa6\x39\xcb\x05\x1a\xbf\xe9\xc6\xc7\x48\x0b\x4e\xaf\xdf\xcf\x6e\xae\x7e\xbd\xb8\x7c\x6d\xb0\xd0\x68\x13\xab\x56\x28\x9f\x25\xc5\x72\x8d\x9b\x9d\xec\x7a\x3c\xc7\x1f\x4e\x8c\xd0\x28\x58\x45\x45\x36\x8d\x47\x86\xf3\x1d\x13\x22\xac\x0f\x53\x64\x90\x20\x3b\xe9\x41\xad\xf4\x47\xba\xe6\xab\xfa\x36\x84\xe4\x77\xff\x97\xe4\xdc\xd2\x40\x0b\xeb\xe0\x43\xcf\x92\x9a\x54\xbb\x44\xaa\x82\x1a\xa1\x6e\x85\xe5\x8d\xc0\x78\xc8\x74\xec\xb4\xaa\x7d\xf7\xe2\x26\x45\x43\xfd\xb8\x92\x29\xbc\xd1\xb8\x71\x55\xba\x15\xac\xeb\xd7\x80\xd9\x1a\x94\x14\x5b\x50\x12\x23\xeb\x40\xf1\xb1\x8a\xd4\x23\xbc\x72\x18\x43\x1d\x65\x0f\x14\x4a\x03\xb2\x62\x09\xbc\x1c\x48\xb8\x2f\x5f\x24\x47\x73\x7d\x9d\xc1\xab\xde\x10\x97\x57\x37\x17\x19\xd4\x6c\x85\x60\xda\x30\x49\xb4\x5a\x74\xa5\xe1\xc4\xad\xb8\x78\x70\x55\xbc\xe2\x6b\x94\xe0\xd2\xe1\x85\x4f\x29\x92\xa1\xe2\x56\xb0\xfc\x1b\x50\x1b\x89\xda\x9d\x73\xb1\x4e\xb6\x8a\x26\x89\x0c\x0d\x6d\xac\xb8\x2c\x53\xf8\x1d\x61\xc3\x85\x80\x46\xab\x9c\xe5\x62\x0b\xad\x24\x57\xb8\xf9\x39\xb4\xff\x54\x8b\xa0\x66\x7f\x2a\xdd\x39\x44\xf0\x15\x52\x73\xcc\x0d\x94\x64\xb8\x0d\xb7\x4b\x30\x85\x52\x4d\x3a\xf0\xaf\x17\x8d\xe4\x34\xdc\xc1\x8e\x43\x52\xb3\xf4\xea\xb0\x06\xac\x0a\x46\xf1\x5a\x74\xd9\xe0\x54\xc8\x76\x80\x20\x6e\x05\x28\x3f\x80\x02\x3d\xe3\x9b\x60\x37\xe7\xab\x60\xcc\x10\x5c\x24\x30\x5a\xd4\x35\x97\x58\x42\xbe\x75\xdb\xde\x9e\x37\xce\xbe\xfb\x06\x7d\x1c\x05\x0b\xbf\x45\x87\xb8\x81\xf1\xd2\xda\xc6\x64\xd3\xa9\x5f\x4a\x0b\x55\x4f\x7f\x24\x95\x67\x4e\x89\x9f\xc2\x07\x89\xfd\xd3\x34\x00\x9f\x99\xc6\x77\xab\x69\x5f\xf2\xa7\x87\x71\xe4\x20\x6f\xc1\xf6\x78\x0b\xf6\x04\x6f\x0f\xb6\x66\x87\xcd\x17\xb7\xf6\x8e\x99\xe5\x13\x02\x0c\xa3\x31\xf3\x7c\x7b\x95\xeb\x6d\xa1\xea\x86\xc9\xad\x13\x60\xa1\xd4\x34\x67\xba\xd7\xf5\x49\x15\xa3\x92\xa7\x42\xa8\x8d\xaf\xbb\xd6\x8f\x5f\xdd\xe0\x15\xed\x05\xc6\xd2\xc4\x56\x6d\x53\xb8\x54\xae\x66\x31\x4b\x17\x8e\x84\x00\x89\xb1\xe8\x4c\xe8\x3e\xaf\x1b\xe1\x66\x6a\xe7\xe2\x78\xcf\xe5\x05\xf5\xda\x7e\xb2\x73\x5d\x04\x45\x62\x1f\xa4\x5d\xd6\x5f\xdc\x32\x22\x91\x41\xb4\x32\xf5\x40\x29\x61\x67\x6a\x96\xd3\x5f\x3c\x90\x24\x67\x4a\xad\x72\xa5\x56\x93\x00\x62\x5c\x56\x89\x5d\x62\x12\x25\x4e\x22\xe7\x04\x6f\x1b\xc1\x0b\x6e\xc5\xf6\x00\xae\x84\xd9\xc3\xd7\xdd\x70\x75\x16\xaf\x66\x70\xd6\x6a\x71\x1e\x96\x3f\x47\x13\x7c\xcd\x72\xa4\x5e\x67\x39\x8d\x7f\xb5\x5c\xe3\x4c\x23\xcd\xaa\x34\x09\xd9\x80\x26\x4d\x44\xf6\x80\x89\x5d\xeb\xfd\x35\xf1\x42\x45\x77\x74\x67\x81\x6e\x16\xbf\xf7\x84\xde\xc1\x01\x60\xad\x5d\x2a\xdd\x8f\x79\xaa\xae\xbd\x07\xfc\xab\xc9\x9e\xf1\x77\x86\x1e\xb3\x54\x9b\x88\xc6\xfe\xe6\xcc\xd3\xcb\x76\x51\xa1\x7f\x18\xc8\x95\x8d\x5b\x58\x33\x2e\x32\xb0\xc8\xea\xff\x97\xb8\x29\x04\xd3\xdc\xba\x50\xed\x25\xfc\xc5\xcf\xf5\x5c\x1a\x5e\xe2\x23\x91\x3c\x68\xd9\xa1\xa5\x0e\x15\x06\x77\x49\x29\x1b\xde\x08\xc2\x11\xff\x91\x41\x88\x96\x41\xcf\xc4\xd6\x18\x87\x5a\x87\x50\xd4\xf8\xc4\xb6\xd6\xf7\xa9\x87\xb8\x0c\xc3\x64\x52\x78\x1a\x19\x8c\xdf\xa9\x4d\xac\x91\x0e\xb8\x3d\x81\x41\x6a\xfd\x41\x64\x59\xd3\x1c\x19\x58\xaa\x1a\x1b\x56\xed\x15\xf0\xc7\xe4\xe3\xb9\xec\x20\xc4\x0d\xa1\x79\x7a\x98\x51\x89\xa6\xd0\xdc\x3d\x5c\x3c\xc5\x6b\x70\x34\x83\xf1\x25\xd5\x9b\xb7\x28\xe1\x1c\xd7\x28\x54\x83\x1a\xae\xb5\x2a\xdb\xc2\xf2\x35\xb7\x5b\xb8\x16\xcc\x92\x27\x06\x6c\x3f\xa3\x75\x0f\x31\x4e\xfb\x50\xcf\x70\x4d\xc9\xdf\xc7\x84\x4b\x8d\xc2\xb6\x4c\x88\x2d\x58\xef\xd8\x18\x87\xe4\x81\xa6\x64\xb6\x47\x90\x98\x14\x49\x7c\xf7\x38\xd9\xc9\x15\x1a\x91\x3d\xa3\x9c\xc0\x45\x69\x2c\x41\xf9\x72\x59\x72\x13\xa3\xc0\x75\x16\x27\x91\xa4\x40\xb6\xf6\x42\xfa\x87\x42\x25\x0d\xcf\xb9\x20\x95\xd4\x22\x8e\x18\xee\x39\xa9\xcb\x0c\x0a\x8b\xce\x78\xfd\xc3\x16\x6b\xad\x3a\x09\x74\x7c\x2b\xed\x44\x91\xca\xba\xb7\x94\xf8\x34\x13\x88\x90\x27\x09\xb6\x08\xe8\x22\x2d\x2e\xfd\x2b\x89\xef\x56\xb8\x01\x26\x81\xcb\x92\xa6\x26\xa5\x5d\x54\x36\x1a\x23\xf1\xd0\x07\x50\x6b\x8d\x69\x95\xc2\xfa\xdb\xf4\x65\xfa\x32\xd1\xc5\xb7\x07\xfc\x1a\xde\xba\xfc\x44\xb2\xe2\xcd\xcc\x8b\x13\x9f\xb9\xfa\x0c\xf0\xf8\x94\x0b\x55\xac\x1c\x43\x87\xac\x7d\x7e\xec\x3c\x0b\xc5\x0e\x91\xd1\x8c\x2a\xa9\xb4\x47\xbc\xf1\x29\x54\x52\xa4\x50\xcd\x5e\x22\x2b\xa3\x51\xcc\xd3\x19\xe4\xb1\xcb\xc9\xd0\x8d\x29\x13\xf0\x54\x0e\x85\xbd\x51\x35\x4e\x1b\x56\xac\x28\x81\x2a\x6e\x07\x21\x78\xed\x57\x4d\x98\x4c\xfd\x17\x94\xd8\xa0\x2c\x0d\xf4\x39\xe0\x57\x50\x16\x1c\xfb\x16\x19\x92\x08\x61\xdc\xee\xad\xdd\x75\x83\x27\xfd\x63\xb7\x0d\x66\xe1\x41\x90\x89\x03\xfc\x5d\x4d\x2c\x94\x5c\x08\x5e\x58\xdf\x99\x0d\x45\xea\x74\x0f\x27\x76\x84\x30\x6b\x39\xf8\xca\x19\x71\xee\x72\x2c\xf8\xc0\x05\xc7\x0e\x33\xdd\x4a\x60\x06\x18\x18\xd4\x6b\x5e\x3c\x09\x2d\x93\x46\x70\x63\x87\x06\xff\xf1\xe7\xdb\x5a\xc4\xee\xf2\xf5\xf8\xdb\xf4\xe5\x18\x50\x16\xaa\xe4\xb2\x7a\x3d\xfe\x72\xf3\x4b\xf2\xc3\xf8\xe7\x9f\x06\xb2\xb8\xd2\xed\xde\x6a\xe7\x3e\xb4\xd1\xd8\xb9\xd7\xf3\x6f\x40\x7a\x47\x08\xf7\x86\x31\x90\xc1\x6c\x8d\xc5\x1a\xc6\x93\xfb\x9c\xcb\x87\x69\xa3\x55\xa5\x59\x0d\x49\x12\xc4\x1a\xef\xc5\xae\xfb\x4f\x28\x21\xc0\x83\xd7\x7e\x10\x0f\x38\x1f\xe5\x5c\xa6\xf1\xfc\x38\xd0\x1e\x1f\xc5\xa3\x61\x67\x28\xce\xc1\x0b\xa3\xd1\x7f\x03\x00\x00\xff\xff\xfe\x80\xf3\x7d\xcc\x1d\x00\x00"),
		},
		"/Makefile": &vfsgen۰CompressedFileInfo{
			name:             "Makefile",
			modTime:          time.Date(2020, 6, 17, 8, 25, 11, 0, time.UTC),
			uncompressedSize: 806,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x4f\x6b\xc2\x40\x10\xc5\xcf\xce\xa7\x18\x52\x0f\x0a\x6d\xbc\x0b\x85\x22\x85\x56\x90\xda\x43\xfb\x01\x36\xc9\x64\x77\x71\xcc\xa4\xfb\x07\xfb\xf1\xcb\xae\x12\x63\x4b\xc1\x83\x7b\x7a\x30\xbf\xc7\xbc\x37\x7b\x77\xe3\x07\xb6\xa5\x2f\x9c\xdd\xe3\x74\xe6\x0d\x31\xe3\xc1\xd8\xda\x60\x15\x2d\x37\x41\x84\xe7\x73\x98\xce\x0e\xca\x75\xb6\xd3\x58\xac\x3b\x1f\x14\x73\xd2\x03\x51\x96\x65\x71\x01\x69\x41\x4d\x01\xb5\x0d\x26\x56\x65\x2d\xfb\x85\x26\xe5\x2a\xf9\x3e\x88\xdb\xf9\xc5\x60\xcc\xae\xe3\xd2\x6b\x2d\x73\xa0\xae\xb1\x2d\xac\x3e\xd7\x9b\xe7\x8f\xed\x76\x83\xcb\xc7\x7f\x93\x8f\xaa\x0d\x7c\xae\x43\xce\x89\xc3\xe2\x4d\xce\x30\xb6\x12\xbb\xe6\x58\xe5\xb8\xe2\xe6\x87\x06\xc5\xbc\x84\xc9\x13\xd5\x46\xb0\x28\x06\x95\x33\x4c\x26\x0f\xb8\x4a\x02\x5b\x71\xc8\x52\x2b\xc6\x40\x3e\xd8\x4e\x97\x67\xd4\x11\x93\xf2\x74\x09\xf7\xb1\x62\xeb\x0d\x35\x78\x1a\x8f\x0c\x7d\xf4\x26\xd1\xef\xd1\x1b\x74\xd4\x0b\x06\xc1\x17\x1b\x5e\x63\x35\xa2\x92\x1a\xdf\x28\xff\x85\x62\x06\xc8\xd9\x52\xe8\xbd\xda\x11\xf6\x3b\xed\xa8\x65\xaa\xc3\x6f\x43\xe6\x00\x4e\x01\xae\x30\x9c\x48\x80\x94\xf0\x0a\x3e\x61\x00\xe7\xf9\xf2\x0f\x30\x8c\xb0\x04\xf8\x09\x00\x00\xff\xff\xcf\xd9\x63\x64\x26\x03\x00\x00"),
		},
		"/bin": &vfsgen۰DirInfo{
			name:    "bin",
			modTime: time.Date(2020, 6, 17, 8, 21, 10, 0, time.UTC),
		},
		"/bin/Darwin": &vfsgen۰DirInfo{
			name:    "Darwin",
			modTime: time.Date(2020, 6, 17, 2, 23, 41, 0, time.UTC),
		},
		"/bin/Darwin/.keep": &vfsgen۰FileInfo{
			name:    ".keep",
			modTime: time.Date(2020, 5, 28, 6, 41, 51, 0, time.UTC),
			content: []byte(""),
		},
		"/bin/Linux": &vfsgen۰DirInfo{
			name:    "Linux",
			modTime: time.Date(2020, 6, 17, 2, 23, 41, 0, time.UTC),
		},
		"/bin/Linux/.keep": &vfsgen۰FileInfo{
			name:    ".keep",
			modTime: time.Date(2020, 5, 28, 6, 41, 51, 0, time.UTC),
			content: []byte(""),
		},
		"/bin/Windows": &vfsgen۰DirInfo{
			name:    "Windows",
			modTime: time.Date(2020, 6, 17, 2, 23, 41, 0, time.UTC),
		},
		"/bin/Windows/.keep": &vfsgen۰FileInfo{
			name:    ".keep",
			modTime: time.Date(2020, 5, 28, 6, 41, 51, 0, time.UTC),
			content: []byte(""),
		},
		"/bin/buildtool": &vfsgen۰CompressedFileInfo{
			name:             "buildtool",
			modTime:          time.Date(2020, 5, 28, 7, 6, 41, 0, time.UTC),
			uncompressedSize: 600,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6b\xe3\x30\x10\x85\xef\xfa\x15\x83\xd6\x81\x04\x36\xd1\x9e\x13\x16\xb2\x2c\xa1\xf4\xd2\x16\x4a\x69\xa0\xf4\x20\x4b\xe3\x58\xd4\xd1\x98\xd1\x98\x38\x84\xfc\xf7\x62\x3b\x0e\xbd\xf4\xd0\xdc\x06\x69\xde\xbc\xf7\x3d\x74\x25\x01\x15\x85\x52\x3b\x12\x9a\xce\x4e\xea\x17\xbc\x3c\xdc\x6f\x21\x39\x0e\xb5\xa8\xcd\x76\xf3\xff\xaf\xce\xa6\x3e\x70\xb4\x7b\x84\xec\xcf\xcc\x64\xd3\xa6\x9f\xe7\xa9\x9b\x73\x9b\x70\xfc\xd2\x2a\x14\xf0\x06\xf3\x16\x74\x76\xea\xa4\x67\x0d\xef\x2b\x90\x12\x23\x60\x8b\xee\xcb\xb3\xce\xd6\x7a\x05\x45\x50\x7d\x02\x7d\x87\x96\x73\x6a\x97\xf0\x8f\x5d\x19\x04\x9d\x34\x8c\x10\x49\x20\x35\x75\x4d\x2c\xe8\x7f\xc3\x45\xbc\xd0\x17\xd1\x53\x85\x36\x21\x78\x3a\xc4\x8a\xac\xef\x7c\x20\x6f\x42\xe5\x85\xa8\x82\x3c\x44\xcb\x47\xb0\xd1\x43\x5d\x59\x87\x10\x62\xbf\xf1\x2d\x0c\xf8\xc0\xe8\x84\xf8\x38\x1a\x94\x22\x75\x5a\x1a\xb3\x0b\x52\x36\xf9\xc2\xd1\xde\xec\x86\xa0\x07\xe2\x8f\x64\xae\x66\x86\xb1\xcf\x92\xb4\x3a\x0f\x55\x42\xb6\x56\xd8\x06\x51\x6a\xd9\xb5\xca\xb8\x87\xd7\x10\x3d\x1d\xd2\x58\x6d\x6f\x31\x79\x7c\x9e\x0c\xd3\x6d\x30\xd7\x8d\x64\xc6\xf3\x57\x8a\xe1\xee\xcf\x19\x14\xb6\x75\x45\x8c\x7c\x5b\x01\x3d\xf5\x67\x00\x00\x00\xff\xff\x44\x8e\x34\xd0\x58\x02\x00\x00"),
		},
		"/bin/multiarch": &vfsgen۰CompressedFileInfo{
			name:             "multiarch",
			modTime:          time.Date(2020, 5, 28, 7, 6, 46, 0, time.UTC),
			uncompressedSize: 600,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6b\xe3\x30\x10\x85\xef\xfa\x15\x83\xd6\x81\x04\x36\xd1\x9e\x13\x16\xb2\x2c\xa1\xf4\xd2\x16\x4a\x69\xa0\xf4\x20\x4b\xe3\x58\xd4\xd1\x98\xd1\x98\x38\x84\xfc\xf7\x62\x3b\x0e\xbd\xf4\xd0\xdc\x06\x69\xde\xbc\xf7\x3d\x74\x25\x01\x15\x85\x52\x3b\x12\x9a\xce\x4e\xea\x17\xbc\x3c\xdc\x6f\x21\x39\x0e\xb5\xa8\xcd\x76\xf3\xff\xaf\xce\xa6\x3e\x70\xb4\x7b\x84\xec\xcf\xcc\x64\xd3\xa6\x9f\xe7\xa9\x9b\x73\x9b\x70\xfc\xd2\x2a\x14\xf0\x06\xf3\x16\x74\x76\xea\xa4\x67\x0d\xef\x2b\x90\x12\x23\x60\x8b\xee\xcb\xb3\xce\xd6\x7a\x05\x45\x50\x7d\x02\x7d\x87\x96\x73\x6a\x97\xf0\x8f\x5d\x19\x04\x9d\x34\x8c\x10\x49\x20\x35\x75\x4d\x2c\xe8\x7f\xc3\x45\xbc\xd0\x17\xd1\x53\x85\x36\x21\x78\x3a\xc4\x8a\xac\xef\x7c\x20\x6f\x42\xe5\x85\xa8\x82\x3c\x44\xcb\x47\xb0\xd1\x43\x5d\x59\x87\x10\x62\xbf\xf1\x2d\x0c\xf8\xc0\xe8\x84\xf8\x38\x1a\x94\x22\x75\x5a\x1a\xb3\x0b\x52\x36\xf9\xc2\xd1\xde\xec\x86\xa0\x07\xe2\x8f\x64\xae\x66\x86\xb1\xcf\x92\xb4\x3a\x0f\x55\x42\xb6\x56\xd8\x06\x51\x6a\xd9\xb5\xca\xb8\x87\xd7\x10\x3d\x1d\xd2\x58\x6d\x6f\x31\x79\x7c\x9e\x0c\xd3\x6d\x30\xd7\x8d\x64\xc6\xf3\x57\x8a\xe1\xee\xcf\x19\x14\xb6\x75\x45\x8c\x7c\x5b\x01\x3d\xf5\x67\x00\x00\x00\xff\xff\x44\x8e\x34\xd0\x58\x02\x00\x00"),
		},
		"/dist": &vfsgen۰DirInfo{
			name:    "dist",
			modTime: time.Date(2020, 6, 18, 11, 39, 2, 0, time.UTC),
		},
		"/dist/CHANGELOG.md": &vfsgen۰CompressedFileInfo{
			name:             "CHANGELOG.md",
			modTime:          time.Date(2020, 6, 18, 11, 39, 2, 0, time.UTC),
			uncompressedSize: 213,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcc\xbf\x0a\x83\x30\x10\x80\xf1\xfd\x5e\xc1\xe5\xc0\x5d\x4e\xab\x55\x3b\xea\xdc\xa5\x43\x97\x4c\x17\x73\xda\x40\xfe\x40\x62\x0b\xbe\x7d\xc1\xb9\x5b\xc7\x0f\x3e\x7e\x00\x65\x89\xf3\x8b\xc3\x26\x2e\x6e\x00\x43\xdf\xd4\x9a\x0c\x4e\x6f\xeb\x0c\xde\x65\x67\x34\x36\x2f\xf1\x23\xe9\x00\x36\xda\x90\x5e\x70\x8e\xde\xdb\x1d\xd7\x98\xf0\x21\x4e\x38\x0b\x16\x6a\x6c\xfd\x64\x03\xa7\xe3\x29\x29\xdb\x18\x6e\x58\x28\xf2\x85\x1a\xaf\xbe\xae\x9a\x8a\xce\x84\xfe\x42\xeb\xd0\xe8\x7f\x08\xe9\x86\x96\x3a\xfe\x45\x9c\x17\xc0\x37\x00\x00\xff\xff\xd8\x74\xc5\x64\xd5\x00\x00\x00"),
		},
		"/dist/config.yaml": &vfsgen۰CompressedFileInfo{
			name:             "config.yaml",
			modTime:          time.Date(2020, 6, 18, 11, 39, 2, 0, time.UTC),
			uncompressedSize: 1722,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x51\x8b\xe3\x36\x10\x7e\xf7\xaf\x18\xf6\x25\xb0\x10\xa7\xf4\xda\x70\x08\x16\xba\x97\x0d\xdb\xc2\x76\xb7\xf4\x8e\xd2\xa7\x9a\x89\x3c\xb1\xd5\x48\x9a\x20\xc9\x9b\x5c\x83\xfb\xdb\x0f\x59\x8a\xe3\x5d\xf6\xee\x5e\x92\x99\xf9\xbe\xb1\x47\xf3\x7d\xd6\xde\xf1\xbf\x24\x43\x65\xd1\x90\x80\x4d\xa7\x74\x1d\x98\x75\xe1\x48\x13\x7a\x12\x05\x40\xa3\x42\xdb\x6d\x62\x04\xc0\x07\x4b\x4e\x40\x43\xe8\x36\x7c\x3c\xb0\xdb\xf9\xa1\xfe\xba\x3d\x55\xaa\x40\x66\xaf\x31\x90\x80\xd9\xe9\x54\x7e\xc2\xa6\xef\x67\x85\x97\xcc\x7b\x51\xbc\xd5\x24\xd9\x18\x15\x2a\xec\x42\xcb\x4e\x4c\x9e\xdc\x70\x1e\xc8\x6d\x38\x0c\x75\x32\xa8\xf4\x14\xf8\x45\xa2\xd3\xec\x37\x24\x77\xe4\x4a\xc9\xe6\xf2\x3c\xe3\x9b\xc9\x28\x1f\xe3\xfb\xa1\xdb\xd7\x18\x08\xb6\xec\xe0\x74\x82\xf2\x8f\xb4\x87\x47\x34\x04\x7d\x0f\xcf\xe4\xbc\x62\x3b\x40\x9f\xb0\x81\xbe\x2f\x86\x39\xbd\x28\xe6\xa0\xea\x97\x53\x37\xcc\x3e\x0e\x3b\x07\xad\x6c\x77\x1c\xa2\x1a\xdd\x41\xd9\x21\x3c\x28\x5b\xf3\xc1\x0f\x44\x74\xb2\x4d\xd4\xab\x77\xef\x97\x57\x43\x84\xa6\x5e\xfe\x94\x22\x67\xce\xff\x43\x25\xf2\x4d\xa6\x0f\xe4\x80\xae\xa1\x30\x7d\x59\xf5\xee\xfd\x72\x92\x5d\x9e\x95\x73\x67\xaa\xe5\xcb\x3c\xe3\x69\xc0\xb1\x3d\xa7\x97\xfe\x3c\xf5\x48\x38\xe7\x67\x46\xad\x9c\x80\xb2\x00\x30\xa8\x6c\x8a\x74\xbd\xd5\xd8\xe4\xe9\xe6\x1e\xe6\x07\x98\xff\x3d\xe0\x65\xde\xe7\xcd\xe9\x54\xfe\x95\xc2\xbe\x1f\xc1\xa4\x52\xc4\x56\x43\x34\x81\xa2\x46\x11\xb8\xc3\x40\x93\x72\xdc\x7e\xf8\xf0\xf9\xe6\xa2\x7e\x01\xb0\x51\x16\xdd\xe7\x97\xd2\x90\x7d\x4e\xe3\xac\xee\x9f\xaa\xf5\xe3\xed\x87\x87\xf5\xdd\xcd\x0f\x71\x56\xb4\x4d\x74\x4f\x11\x15\x51\xcf\x34\x0a\x5b\xd3\x16\x3b\x1d\x3d\x76\x16\x3c\xb6\x7f\xdb\xd9\xaf\xed\x33\x8f\xa5\x27\x0f\x7d\x5f\xc5\xe8\xd6\xc9\x16\xa2\xf3\x01\x1c\xed\x35\x4a\x32\x64\x93\x8a\x90\x7c\x20\x40\xa5\x3d\x43\x72\x83\x18\x4d\x01\x59\x19\x71\x71\x14\x24\x2d\xc5\xe8\x36\x38\x8b\x23\x26\x5e\xdb\xb2\x33\x18\x44\xb4\x4c\xd9\xfc\x57\x00\x1c\x1c\xee\x2b\x65\xab\x5a\x39\x92\x81\xe3\xa6\xae\xb6\xa8\x3d\x45\x63\x6d\x95\xa6\xd1\x56\x92\xac\xa4\xeb\x21\x79\xf8\x6d\xb5\x7e\x5c\xad\xaf\x2f\x88\x9f\x22\x1f\x33\xe2\x08\x6b\x93\x81\x3f\xd7\xb7\x77\xbf\xe7\xba\x6c\xd1\x36\xa4\xb9\x49\xe9\xea\xd7\xdb\xc7\xfb\xf5\xc3\xd3\xfd\x75\xe1\x2d\xee\x7d\xcb\x41\x7c\x65\xa1\xe9\xa3\x9b\x5b\x3a\x86\x59\x21\x5b\x92\x3b\xdf\x99\x37\xc8\x67\xc8\x97\xe1\x18\x45\x43\xdd\xb0\x53\xa1\x35\x02\x7c\x8b\x3f\xfe\xbc\x2c\xc6\x19\x44\x3a\x67\x20\x97\x57\x4f\x47\xa9\xbb\x9a\x52\x32\x87\xd9\x3f\x35\x4b\x2f\x66\x63\x1a\xc8\x87\x21\xf5\xec\x82\x00\xf4\xb2\xa8\x95\x0f\x02\xe2\x6f\x41\xf6\xb9\x1a\xd7\x96\xee\xc8\x2a\xf0\x8e\xac\x80\xff\x17\xa5\x64\xbb\x55\xcd\xe2\x62\xd0\xc5\x94\x92\x3a\x34\x7e\xb7\x63\xa4\xa4\x0e\xc2\xef\x35\x9c\x19\xc5\x86\xb6\xec\x86\xb3\xb5\xcc\xbb\xac\x6d\xc3\x60\xb8\x86\x9a\x0f\x56\x33\xd6\xe7\x5a\x43\x96\x5c\xbc\x0d\xcb\x45\x59\x96\x85\xe7\xce\x49\xfa\x9a\x32\x6f\x58\x3d\x7f\xd2\xd9\xe3\xaf\x9c\x97\xcf\xdd\x39\x3d\x0c\x71\x7e\xb7\x80\x36\x84\xbd\x17\x8b\xbc\x98\xe1\xc6\xce\x27\xfe\x26\x57\x63\xe2\x7e\x09\x00\x00\xff\xff\xc6\xcd\x7b\x09\xba\x06\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/.goreleaser.yml"].(os.FileInfo),
		fs["/Makefile"].(os.FileInfo),
		fs["/bin"].(os.FileInfo),
		fs["/dist"].(os.FileInfo),
	}
	fs["/bin"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/bin/Darwin"].(os.FileInfo),
		fs["/bin/Linux"].(os.FileInfo),
		fs["/bin/Windows"].(os.FileInfo),
		fs["/bin/buildtool"].(os.FileInfo),
		fs["/bin/multiarch"].(os.FileInfo),
	}
	fs["/bin/Darwin"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/bin/Darwin/.keep"].(os.FileInfo),
	}
	fs["/bin/Linux"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/bin/Linux/.keep"].(os.FileInfo),
	}
	fs["/bin/Windows"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/bin/Windows/.keep"].(os.FileInfo),
	}
	fs["/dist"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/dist/CHANGELOG.md"].(os.FileInfo),
		fs["/dist/config.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
